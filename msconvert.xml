<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
<!--Proposed Tool Section: [File Handling]-->
<tool id="msconvert" name="msconvert" version="3.0.9098-0.1">
  <description>
Usage: msconvert [options] [filemasks]
Convert mass spec data file formats.

Return value: # of failed files.

Options:
  -f [ --filelist ] arg            : specify text file containing filenames
  -o [ --outdir ] arg (=.)         : set output directory ('-' for stdout) [.]
  -c [ --config ] arg              : configuration file (optionName=value)
  --outfile arg                    : Override the name of output file.
  -e [ --ext ] arg                 : set extension for output files 
                                   [mzML|mzXML|mgf|txt|mz5]
  --mzML                           : write mzML format [default]
  --mzXML                          : write mzXML format
  --mz5                            : write mz5 format
  --mgf                            : write Mascot generic format
  --text                           : write ProteoWizard internal text format
  --ms1                            : write MS1 format
  --cms1                           : write CMS1 format
  --ms2                            : write MS2 format
  --cms2                           : write CMS2 format
  -v [ --verbose ]                 : display detailed progress information
  --64                             : set default binary encoding to 64-bit 
                                   precision [default]
  --32                             : set default binary encoding to 32-bit 
                                   precision
  --mz64                           : encode m/z values in 64-bit precision 
                                   [default]
  --mz32                           : encode m/z values in 32-bit precision
  --inten64                        : encode intensity values in 64-bit 
                                   precision
  --inten32                        : encode intensity values in 32-bit 
                                   precision [default]
  --noindex                        : do not write index
  -i [ --contactInfo ] arg         : filename for contact info
  -z [ --zlib ]                    : use zlib compression for binary data
  --numpressLinear [=arg(=2e-009)] : use numpress linear prediction compression
                                   for binary mz and rt data (relative accuracy
                                   loss will not exceed given tolerance arg, 
                                   unless set to 0)
  --numpressPic                    : use numpress positive integer compression 
                                   for binary intensities (absolute accuracy 
                                   loss will not exceed 0.5)
  --numpressSlof [=arg(=0.0002)]   : use numpress short logged float 
                                   compression for binary intensities (relative
                                   accuracy loss will not exceed given 
                                   tolerance arg, unless set to 0)
  -n [ --numpressAll ]             : same as --numpressLinear --numpressSlof 
                                   (see https://github.com/fickludd/ms-numpress
                                   for more info)
  -g [ --gzip ]                    : gzip entire output file (adds .gz to 
                                   filename)
  --filter arg                     : add a spectrum list filter
  --merge                          : create a single output file from multiple 
                                   input files by merging file-level metadata 
                                   and concatenating spectrum lists
  --simAsSpectra                   : write selected ion monitoring as spectra, 
                                   not chromatograms
  --srmAsSpectra                   : write selected reaction monitoring as 
                                   spectra, not chromatograms
  --combineIonMobilitySpectra      : write all drift bins/scans in a 
                                   frame/block as one spectrum instead of 
                                   individual spectra
  --acceptZeroLengthSpectra        : some vendor readers have an efficient way 
                                   of filtering out empty spectra, but it takes
                                   more time to open the file
  --ignoreUnknownInstrumentError   : if true, if an instrument cannot be 
                                   determined from a vendor file, it will not 
                                   be an error 
  --help                           : show this message, with extra detail on 
                                   filter options

FILTER OPTIONS
run this command with --help to see more detail
index &amp;lt;index_value_set&amp;gt;
msLevel &amp;lt;mslevels&amp;gt;
chargeState &amp;lt;charge_states&amp;gt;
precursorRecalculation 
mzRefiner input1.pepXML input2.mzid [msLevels=&amp;lt;1-&amp;gt;]
[thresholdScore=&amp;lt;CV_Score_Name&amp;gt;] [thresholdValue=&amp;lt;floatset&amp;gt;]
[thresholdStep=&amp;lt;float&amp;gt;] [maxSteps=&amp;lt;count&amp;gt;]
lockmassRefiner mz=&amp;lt;real&amp;gt; mzNegIons=&amp;lt;real (mz)&amp;gt; tol=&amp;lt;real (1.0 Daltons)&amp;gt;
precursorRefine 
peakPicking [&amp;lt;PickerType&amp;gt; [snr=&amp;lt;minimum signal-to-noise ratio&amp;gt;]
[peakSpace=&amp;lt;minimum peak spacing&amp;gt;] [msLevel=&amp;lt;ms_levels&amp;gt;]]
scanNumber &amp;lt;scan_numbers&amp;gt;
scanEvent &amp;lt;scan_event_set&amp;gt;
scanTime &amp;lt;scan_time_range&amp;gt;
sortByScanTime 
stripIT 
metadataFixer 
titleMaker &amp;lt;format_string&amp;gt;
threshold &amp;lt;type&amp;gt; &amp;lt;threshold&amp;gt; &amp;lt;orientation&amp;gt; [&amp;lt;mslevels&amp;gt;]
mzWindow &amp;lt;mzrange&amp;gt;
mzPrecursors &amp;lt;precursor_mz_list&amp;gt;
defaultArrayLength &amp;lt;peak_count_range&amp;gt;
zeroSamples &amp;lt;mode&amp;gt; [&amp;lt;MS_levels&amp;gt;]
mzPresent &amp;lt;tolerance&amp;gt; &amp;lt;type&amp;gt; &amp;lt;threshold&amp;gt; &amp;lt;orientation&amp;gt; &amp;lt;mz_list&amp;gt;
[&amp;lt;include_or_exclude&amp;gt;]
scanSumming [precursorTol=&amp;lt;precursor tolerance&amp;gt;] [scanTimeTol=&amp;lt;scan time
tolerance&amp;gt;]
MS2Denoise [&amp;lt;peaks_in_window&amp;gt; [&amp;lt;window_width_Da&amp;gt;
[multicharge_fragment_relaxation]]]
MS2Deisotope [hi_res [mzTol=&amp;lt;mzTol&amp;gt;]] [Poisson [minCharge=&amp;lt;minCharge&amp;gt;]
[maxCharge=&amp;lt;maxCharge&amp;gt;]]
ETDFilter [&amp;lt;removePrecursor&amp;gt; [&amp;lt;removeChargeReduced&amp;gt; [&amp;lt;removeNeutralLoss&amp;gt;
[&amp;lt;blanketRemoval&amp;gt; [&amp;lt;matchingTolerance&amp;gt; ]]]]]
chargeStatePredictor [overrideExistingCharge=&amp;lt;true|false (false)&amp;gt;]
[maxMultipleCharge=&amp;lt;int (3)&amp;gt;] [minMultipleCharge=&amp;lt;int (2)&amp;gt;]
[singleChargeFractionTIC=&amp;lt;real (0.9)&amp;gt;] [maxKnownCharge=&amp;lt;int (0)&amp;gt;]
[makeMS2=&amp;lt;true|false (false)&amp;gt;]
turbocharger [minCharge=&amp;lt;minCharge&amp;gt;] [maxCharge=&amp;lt;maxCharge&amp;gt;]
[precursorsBefore=&amp;lt;before&amp;gt;] [precursorsAfter=&amp;lt;after&amp;gt;] [halfIsoWidth=&amp;lt;half-width
of isolation window&amp;gt;] [defaultMinCharge=&amp;lt;defaultMinCharge&amp;gt;]
[defaultMaxCharge=&amp;lt;defaultMaxCharge&amp;gt;] [useVendorPeaks=&amp;lt;useVendorPeaks&amp;gt;]
activation &amp;lt;precursor_activation_type&amp;gt;
analyzer &amp;lt;analyzer&amp;gt;
analyzerType &amp;lt;analyzer&amp;gt;
polarity &amp;lt;polarity&amp;gt;


Examples:

# convert data.RAW to data.mzML
msconvert data.RAW

# convert data.RAW to data.mzXML
msconvert data.RAW --mzXML

# put output file in my_output_dir
msconvert data.RAW -o my_output_dir

# combining options to create a smaller mzML file, much like the old ReAdW converter program
msconvert data.RAW --32 --zlib --filter &amp;quot;peakPicking true 1-&amp;quot; --filter &amp;quot;zeroSamples removeExtra&amp;quot;

# extract scan indices 5...10 and 20...25
msconvert data.RAW --filter &amp;quot;index [5,10] [20,25]&amp;quot;

# extract MS1 scans only
msconvert data.RAW --filter &amp;quot;msLevel 1&amp;quot;

# extract MS2 and MS3 scans only
msconvert data.RAW --filter &amp;quot;msLevel 2-3&amp;quot;

# extract MSn scans for n&amp;gt;1
msconvert data.RAW --filter &amp;quot;msLevel 2-&amp;quot;

# apply ETD precursor mass filter
msconvert data.RAW --filter ETDFilter

# remove non-flanking zero value samples
msconvert data.RAW --filter &amp;quot;zeroSamples removeExtra&amp;quot;

# remove non-flanking zero value samples in MS2 and MS3 only
msconvert data.RAW --filter &amp;quot;zeroSamples removeExtra 2 3&amp;quot;

# add missing zero value samples (with 5 flanking zeros) in MS2 and MS3 only
msconvert data.RAW --filter &amp;quot;zeroSamples addMissing=5 2 3&amp;quot;

# keep only HCD spectra from a decision tree data file
msconvert data.RAW --filter &amp;quot;activation HCD&amp;quot;

# keep the top 42 peaks or samples (depending on whether spectra are centroid or profile):
msconvert data.RAW --filter &amp;quot;threshold count 42 most-intense&amp;quot;

# multiple filters: select scan numbers and recalculate precursors
msconvert data.RAW --filter &amp;quot;scanNumber [500,1000]&amp;quot; --filter &amp;quot;precursorRecalculation&amp;quot;

# multiple filters: apply peak picking and then keep the bottom 100 peaks:
msconvert data.RAW --filter &amp;quot;peakPicking true 1-&amp;quot; --filter &amp;quot;threshold count 100 least-intense&amp;quot;

# multiple filters: apply peak picking and then keep all peaks that are at least 50% of the intensity of the base peak:
msconvert data.RAW --filter &amp;quot;peakPicking true 1-&amp;quot; --filter &amp;quot;threshold bpi-relative .5 most-intense&amp;quot;

# use a configuration file
msconvert data.RAW -c config.txt

# example configuration file
mzXML=true
zlib=true
filter=&amp;quot;index [3,7]&amp;quot;
filter=&amp;quot;precursorRecalculation&amp;quot;


Questions, comments, and bug reports:
http://proteowizard.sourceforge.net
support@proteowizard.org

ProteoWizard release: 3.0.9098 (2015-11-1)
ProteoWizard MSData: 3.0.9095 (2015-11-1)
ProteoWizard Analysis: 3.0.9098 (2015-11-1)
Build date: Oct 31 2015 21:56:30
</description>
  <macros>
    <token name="@EXECUTABLE@">msconvert</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>msconvert

#if $param___outfile:
  ---outfile $param___outfile
#end if
#if $param_REMAININGPARAMETERS:
  -REMAININGPARAMETERS $param_REMAININGPARAMETERS
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_msconvert_version:
  -msconvert:version     "$adv_opts.param_msconvert_version"
#end if
#end if
</command>
  <inputs>
    <param name="param_REMAININGPARAMETERS" type="data" format="" optional="False" value="&lt;class 'CTDopts.CTDopts._Null'&gt;" label="Input file(s) to convert" help="(-REMAININGPARAMETERS) "/>
    <expand macro="advanced_options">
      <param name="param_msconvert_version" type="text" size="30" value="3.0.9098-0.1" label="Version of the tool that generated this parameters file" help="(-version) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="param___outfile" format="data"/>
  </outputs>
  <help>Converts between different MS file formats.


For more information, visit http://proteowizard.sourceforge.net/tools/msconvert.html</help>
</tool>
